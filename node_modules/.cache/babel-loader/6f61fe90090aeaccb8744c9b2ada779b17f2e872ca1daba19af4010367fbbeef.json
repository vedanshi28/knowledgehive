{"ast":null,"code":"\"use client\";\n\n//import * as z from \"zod\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\MinorProject\\\\knowledgehive\\\\src\\\\components\\\\forms\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\n//import { useOrganization } from \"@clerk/nextjs\";\n//import { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { FormControl, FormLabel, Grid, TextField } from '@mui/material';\nimport Button from \"@mui/material/Button\";\nimport Textarea from \"@mui/material/TextareaAutosize\";\n\n//import { ThreadValidation } from \"@/lib/validations/thread\";\n//import { createThread } from \"@/lib/actions/thread.actions\";\n\n//interface Props {\n//  userId: string;\n//}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm({\n  action\n}) {\n  _s();\n  const router = useNavigate();\n  const pathname = useLocation();\n\n  //const { organization } = useOrganization();\n\n  //const form = useForm<z.infer<typeof ThreadValidation>>({\n  //  resolver: zodResolver(ThreadValidation),\n  //  defaultValues: {\n  //    thread: \"\",\n  //    accountId: userId,\n  //  },\n  //});\n\n  //const onSubmit = async (values) => {\n  //await createThread({\n  //  text: values.thread,\n  //  author: userId,\n  //  path: pathname,\n  //});\n\n  // router.push(\"/\");\n  //};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mt-10 flex flex-col justify-start gap-10\",\n    onSubmit: '',\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      control: '',\n      name: \"thread\",\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"flex w-full flex-col gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: \"text-base-semibold text-light-2\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"no-focus border border-dark-4 bg-dark-3 text-light-1\",\n          children: /*#__PURE__*/_jsxDEV(Textarea, {\n            rows: 15,\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"bg-primary-500\",\n      children: \"Post Thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_s(PostForm, \"Hm29nmIMP6bXUnJqwi+lGuLQ+fk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useForm","useNavigate","useLocation","FormControl","FormLabel","Grid","TextField","Button","Textarea","jsxDEV","_jsxDEV","PostForm","action","router","pathname","className","onSubmit","children","control","name","render","field","fileName","lineNumber","columnNumber","rows","type","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/MinorProject/knowledgehive/src/components/forms/PostForm.jsx"],"sourcesContent":["\"use client\";\r\n\r\n//import * as z from \"zod\";\r\nimport { useForm } from \"react-hook-form\";\r\n//import { useOrganization } from \"@clerk/nextjs\";\r\n//import { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  TextField\r\n} from '@mui/material';\r\nimport Button  from \"@mui/material/Button\";\r\nimport  Textarea  from \"@mui/material/TextareaAutosize\";\r\n\r\n//import { ThreadValidation } from \"@/lib/validations/thread\";\r\n//import { createThread } from \"@/lib/actions/thread.actions\";\r\n\r\n//interface Props {\r\n//  userId: string;\r\n//}\r\n\r\nfunction PostForm({ action }) {\r\n  const router = useNavigate();\r\n  const pathname = useLocation();\r\n\r\n  //const { organization } = useOrganization();\r\n\r\n  //const form = useForm<z.infer<typeof ThreadValidation>>({\r\n  //  resolver: zodResolver(ThreadValidation),\r\n  //  defaultValues: {\r\n  //    thread: \"\",\r\n  //    accountId: userId,\r\n  //  },\r\n  //});\r\n\r\n //const onSubmit = async (values) => {\r\n    //await createThread({\r\n    //  text: values.thread,\r\n    //  author: userId,\r\n    //  path: pathname,\r\n    //});\r\n\r\n   // router.push(\"/\");\r\n  //};\r\n\r\n  return (\r\n      <form\r\n        className='mt-10 flex flex-col justify-start gap-10'\r\n        onSubmit={''}\r\n      >\r\n        <TextField\r\n          control={''}\r\n          name='thread'\r\n          render={({ field }) => (\r\n            <Grid className='flex w-full flex-col gap-3'>\r\n              <FormLabel className='text-base-semibold text-light-2'>\r\n                Content\r\n              </FormLabel>\r\n              <FormControl className='no-focus border border-dark-4 bg-dark-3 text-light-1'>\r\n                <Textarea rows={15} {...field} />\r\n              </FormControl>\r\n            </Grid>\r\n          )}\r\n        />\r\n\r\n        <Button type='submit' className='bg-primary-500'>\r\n          Post Thread\r\n        </Button>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default PostForm;"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACA,SAASC,OAAO,QAAQ,iBAAiB;AACzC;AACA;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SACEC,WAAW,EACXC,SAAS,EACTC,IAAI,EACJC,SAAS,QACJ,eAAe;AACtB,OAAOC,MAAM,MAAO,sBAAsB;AAC1C,OAAQC,QAAQ,MAAO,gCAAgC;;AAEvD;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAd,EAAA;EAC5B,MAAMe,MAAM,GAAGZ,WAAW,CAAC,CAAC;EAC5B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAED;EACG;EACA;EACA;EACA;EACA;;EAED;EACD;;EAEA,oBACIQ,OAAA;IACEK,SAAS,EAAC,0CAA0C;IACpDC,QAAQ,EAAE,EAAG;IAAAC,QAAA,gBAEbP,OAAA,CAACJ,SAAS;MACRY,OAAO,EAAE,EAAG;MACZC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEA,CAAC;QAAEC;MAAM,CAAC,kBAChBX,OAAA,CAACL,IAAI;QAACU,SAAS,EAAC,4BAA4B;QAAAE,QAAA,gBAC1CP,OAAA,CAACN,SAAS;UAACW,SAAS,EAAC,iCAAiC;UAAAE,QAAA,EAAC;QAEvD;UAAAK,QAAA,EAAAzB,YAAA;UAAA0B,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACZd,OAAA,CAACP,WAAW;UAACY,SAAS,EAAC,sDAAsD;UAAAE,QAAA,eAC3EP,OAAA,CAACF,QAAQ;YAACiB,IAAI,EAAE,EAAG;YAAA,GAAKJ;UAAK;YAAAC,QAAA,EAAAzB,YAAA;YAAA0B,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAF,QAAA,EAAAzB,YAAA;UAAA0B,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAF,QAAA,EAAAzB,YAAA;QAAA0B,UAAA;QAAAC,YAAA;MAAA,OACV;IACN;MAAAF,QAAA,EAAAzB,YAAA;MAAA0B,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEFd,OAAA,CAACH,MAAM;MAACmB,IAAI,EAAC,QAAQ;MAACX,SAAS,EAAC,gBAAgB;MAAAE,QAAA,EAAC;IAEjD;MAAAK,QAAA,EAAAzB,YAAA;MAAA0B,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAF,QAAA,EAAAzB,YAAA;IAAA0B,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb;AAAC1B,EAAA,CAjDQa,QAAQ;EAAA,QACAV,WAAW,EACTC,WAAW;AAAA;AAAAyB,EAAA,GAFrBhB,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}